# This is a basic workflow to help you get started with Actions

name: CITests

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]#types: [ labeled ]           
   # paths:
  #    - 'frontend/**'
 #     - 'backend/**'
#      - 'training/**'

#Pre-Setup ENVIRONMENT
env:
  CORE_ENVIRONMENT: ${secrets.CORE_ENVIRONMENT}
  USER_CREDENTIALS: ${secrets.USER_CREDENTIALS}
  CONM_SECRET_KEY_BASE_DEV: ${secrets.CONM_SECRET_KEY_BASE_DEV}
  CONM_SECRET_KEY_BASE_TEST: ${secrets.CONM_SECRET_KEY_BASE_TEST}
  TRUSTED_COMPONENT_ID: ${secrets.TRUSTED_COMPONENT_ID}
  TRUSTED_COMPONENT_KEY: ${secrets.TRUSTED_COMPONENT_KEY}
  CONM_BUCKET_DEV: ${secrets.CONM_BUCKET_DEV}
  CONM_BUCKET_TEST: ${secrets.CONM_BUCKET_TEST}
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  tests:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v1
      - name: Create environment file
        run: |
          echo "" > .env
          echo "CONM_SECRET_KEY_BASE_DEV=${CONM_SECRET_KEY_BASE_DEV}" >> .env
          echo "CONM_SECRET_KEY_BASE_TEST=${CONM_SECRET_KEY_BASE_TEST}" >> .env
          echo "TRUSTED_COMPONENT_ID=${TRUSTED_COMPONENT_ID}" >> .env
          echo "TRUSTED_COMPONENT_KEY=${TRUSTED_COMPONENT_KEY}" >> .env
          echo "CONM_BUCKET_DEV=${CONM_BUCKET_DEV}" >> .env
          echo "CONM_BUCKET_TEST=${CONM_BUCKET_TEST}" >> .env

      - name: check modified files
        id: check_files
        run: |
          echo "=============== list modified files ==============="
          git diff --name-only HEAD^ HEAD

          echo "========== check paths of modified files =========="
          git diff --name-only HEAD^ HEAD > files.txt
          while IFS= read -r file
          do
            echo $file
            if [[ $file = frontend/* ]]; then
              echo "This modified file is under the 'frontend' folder."
              echo "::set-output name=road::frontend"
              echo "::set-output name=run_job::true"
              break
            else
              echo "::set-output name=run_job::false"
            fi
          done < files.txt
      - name: Set selected color
        run: echo '::set-output name=SELECTED_COLOR::green'
        id: random-color-generator
      - name: Get color
        run: echo "The selected color is ${{ steps.random-color-generator.outputs.SELECTED_COLOR }}"

      - name: Run Frontend Tests
        if: "contains(github.event.head_commit.message, 'FRONT')"
        run: |
          echo "${{ steps.check_files.road }}"

      - name: Run Compose Build
        if: "contains(github.event.push.paths, 'backend/**')"
        run: |
          echo "backend"
          echo "${{ steps.check_files.road }}"

      - name: Run Rspec Tests
        run: |
          echo "backend-2"

      - name: Run Training Tests	
        if: ${{ steps.random-color-generator.outputs.SELECTED_COLOR }} == 'green\**'
        run: |
          echo "training"
